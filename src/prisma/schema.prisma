generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     Role     @default(USER)
  profile  Profile?
  enrollments UserEnrollment[]
  reviews   Review[]
   verificationTokens VerificationToken[]
   isVerified   Boolean  @default(false)
}

model Profile {
  id          Int    @id @default(autoincrement())
  user        User   @relation(fields: [userId], references: [id])
  userId      Int @unique
  profilePic  String?
}

model Course {
  id          Int            @id @default(autoincrement())
  title       String
  category    String
  level       String
  enrollments UserEnrollment[]
  reviews     Review[]
}

model UserEnrollment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  createdAt DateTime @default(now())
}

model Review {
  id          Int      @id @default(autoincrement())
  rating     Int        
  content     String
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    Int
  createdAt   DateTime @default(now())
}


model VerificationToken {
  id           Int      @id @default(autoincrement())
  token        String   @unique
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  expiresAt    DateTime @default(dbgenerated("CURRENT_TIMESTAMP + interval '10 minutes'"))
}